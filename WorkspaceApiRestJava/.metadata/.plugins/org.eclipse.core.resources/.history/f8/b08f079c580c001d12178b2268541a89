package com.grupo2.springboot.backend.apirest.controllers;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.grupo2.springboot.backend.apirest.entity.ClienteVo;
import com.grupo2.springboot.backend.apirest.entity.ProductoVo;
import com.grupo2.springboot.backend.apirest.services.cliente.IClienteService;

public class ClienteRestController {

	@Autowired
	private IClienteService clienteService;
	
	// http://localhost:8080/apiCliente/cliente
	@GetMapping("/cliente")
	public ResponseEntity<?>  getCliente(@PathVariable String correo){
		ClienteVo cliente=null;
		
		Map<String,Object>response = new HashMap<>();
		try {
			cliente = clienteService.findByCorreo(correo);
		} catch(DataAccessException e) {
			response.put("mensaje","error al realizar la consulta en la base de datos");
			response.put("error", e.getMessage().concat(": ").concat(e.getMostSpecificCause().getMessage()));
			return new ResponseEntity<Map<String,Object>>(response,HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		return new ResponseEntity<ClienteVo>(cliente,HttpStatus.OK);
	}
	
	
	// http://localhost:8080/apiCliente/registro
	@PostMapping("/registro")
	public ResponseEntity<?> registro(@RequestBody ClienteVo cliente){
		ClienteVo clienteNew = null;
		
		Map<String, Object> response = new HashMap<>();
		try {
			clienteNew = clienteService.save(cliente);
		}catch(DataAccessException e) {
			response.put("mensaje","Error al realizar el insert en la base de datos");
			response.put("error", e.getMessage().concat(": ").concat(e.getMostSpecificCause().getMessage()));
			return new ResponseEntity<Map<String,Object>>(response,HttpStatus.INTERNAL_SERVER_ERROR);
		}
		response.put("mensaje","el ciente se ha creado con exito");
		response.put("producto", clienteNew);
		return new ResponseEntity<Map<String,Object>>(response,HttpStatus.CREATED);
	}
	
}